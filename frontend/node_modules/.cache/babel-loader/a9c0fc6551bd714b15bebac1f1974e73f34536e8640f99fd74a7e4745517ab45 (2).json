{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from 'axios';\n// import Post from \"./Post\";\n\n// function Community() {\n//   const [posts, setPosts] = useState([]);\n//   const [userLogin, setUserLogin] = useState(\"\");\n\n//   useEffect(() => {\n//     const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//     userData.forEach((user) => {\n//       setUserLogin(user.name);\n//     });\n//     axios.get('http://127.0.0.1:8000/api/posts/')\n//       .then((response) => setPosts(response.data))\n//       .catch((error) => console.error(error));\n//   }, []);\n\n//   const handlePostCreated = (post) => {\n//     setPosts([...posts, post]);\n//   };\n\n//   const handleCommentCreated = (postId, comment) => {\n//     const updatedPosts = posts.map(post => {\n//       if (post.id === postId) {\n//         post.comments.push(comment);\n//       }\n//       return post;\n//     });\n//     setPosts(updatedPosts);\n//   };\n\n//   return (\n//     <>\n//       <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <p>Welcome</p>\n//         <div>\n//           {posts.map((post) => (\n//             <div key={post.id}>\n//               <h2>{post.title}</h2>\n//               <p>{post.content}</p>\n//               <p>Author: {userLogin}</p>\n//               <hr />\n//               <div>\n//                 {post.comments.map(comment => (\n//                   <div key={comment.id}>\n//                     <p>{comment.content}</p>\n//                     <p>Author: {comment.author}</p>\n//                     <hr />\n//                   </div>\n//                 ))}\n//               </div>\n//               <CommentForm postId={post.id} onCommentCreated={handleCommentCreated} />\n//             </div>\n//           ))}\n//         </div>\n//       </>\n//     </>\n//   );\n// }\n\n// function CommentForm({ postId, onCommentCreated }) {\n//   const [comment, setComment] = useState(\"\");\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const newComment = {\n//       content: comment,\n//       author: \"Anonymous\", // or set the author based on user authentication\n//     };\n//     axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment)\n//       .then((response) => {\n//         onCommentCreated(postId, response.data);\n//         setComment(\"\");\n//       })\n//       .catch((error) => console.error(error));\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"comment\">Comment:</label>\n//       <input\n//         type=\"text\"\n//         id=\"comment\"\n//         value={comment}\n//         onChange={(event) => setComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Add Comment</button>\n//     </form>\n//   );\n// }\n\n// export default Community;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Post from \"./Post\";\nimport Comments from \"./Comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [userLogin, setUserLogin] = useState(\"\");\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n    userData.forEach(user => {\n      setUserLogin(user.name);\n    });\n    axios.get('http://127.0.0.1:8000/api/posts/').then(response => setPosts(response.data)).catch(error => console.error(error));\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    setPosts(posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      } else {\n        return post;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Post, {\n      onPostCreated: handlePostCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", userLogin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          postId: post.id,\n          comments: post.comments,\n          onCommentCreated: handleCommentCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Community, \"3GAgMHhwxW+DTby1aQ42qw4GCKs=\");\n_c = Community;\nexport default Community;\n\n// function Community() {\n//     const [posts, setPosts] = useState([]);\n//     const [userLogin, setUserLogin] = useState(\"\");\n\n//     useEffect(() => {\n\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//     userData.forEach((user) => {\n//       setUserLogin(user.name);\n//     });\n\n//         axios.get('http://127.0.0.1:8000/api/posts/')\n//             .then((response) => setPosts(response.data))\n//             .catch((error) => console.error(error));\n//     }, []);\n\n//     const handlePostCreated = (post) => {\n//       setPosts([...posts, post]);\n//     };\n//   return (\n//     <>\n\n//       {/* <Navbar/> */}\n//         <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <Comments></Comments>\n//         <p>Welcome</p>\n//         <div>\n//             <div>hi</div>\n//             {posts.map((post) => (\n//                 <div key={post.id}>\n//                     <h2>{post.title}</h2>\n//                     <p>{post.content}</p>\n//                     <p>Author: {userLogin}</p>\n//                     <hr />\n//                 </div>\n//             ))}\n//         </div>\n//       </>\n//       {/* <Footer/> */}\n//     </>\n//   );\n// }\n\n// export default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","axios","Post","Comments","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","posts","setPosts","userLogin","setUserLogin","userData","JSON","parse","localStorage","getItem","forEach","user","name","get","then","response","data","catch","error","console","handlePostCreated","post","handleCommentCreated","postId","comment","map","id","comments","children","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","title","content","onCommentCreated","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from 'axios';\r\n// import Post from \"./Post\";\r\n\r\n// function Community() {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//     userData.forEach((user) => {\r\n//       setUserLogin(user.name);\r\n//     });\r\n//     axios.get('http://127.0.0.1:8000/api/posts/')\r\n//       .then((response) => setPosts(response.data))\r\n//       .catch((error) => console.error(error));\r\n//   }, []);\r\n\r\n//   const handlePostCreated = (post) => {\r\n//     setPosts([...posts, post]);\r\n//   };\r\n\r\n//   const handleCommentCreated = (postId, comment) => {\r\n//     const updatedPosts = posts.map(post => {\r\n//       if (post.id === postId) {\r\n//         post.comments.push(comment);\r\n//       }\r\n//       return post;\r\n//     });\r\n//     setPosts(updatedPosts);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <p>Welcome</p>\r\n//         <div>\r\n//           {posts.map((post) => (\r\n//             <div key={post.id}>\r\n//               <h2>{post.title}</h2>\r\n//               <p>{post.content}</p>\r\n//               <p>Author: {userLogin}</p>\r\n//               <hr />\r\n//               <div>\r\n//                 {post.comments.map(comment => (\r\n//                   <div key={comment.id}>\r\n//                     <p>{comment.content}</p>\r\n//                     <p>Author: {comment.author}</p>\r\n//                     <hr />\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//               <CommentForm postId={post.id} onCommentCreated={handleCommentCreated} />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// function CommentForm({ postId, onCommentCreated }) {\r\n//   const [comment, setComment] = useState(\"\");\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const newComment = {\r\n//       content: comment,\r\n//       author: \"Anonymous\", // or set the author based on user authentication\r\n//     };\r\n//     axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment)\r\n//       .then((response) => {\r\n//         onCommentCreated(postId, response.data);\r\n//         setComment(\"\");\r\n//       })\r\n//       .catch((error) => console.error(error));\r\n//   };\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <label htmlFor=\"comment\">Comment:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         id=\"comment\"\r\n//         value={comment}\r\n//         onChange={(event) => setComment(event.target.value)}\r\n//       />\r\n//       <button type=\"submit\">Add Comment</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Post from \"./Post\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction Community() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n        userData.forEach((user) => {\r\n            setUserLogin(user.name);\r\n        });\r\n\r\n        axios.get('http://127.0.0.1:8000/api/posts/')\r\n            .then((response) => setPosts(response.data))\r\n            .catch((error) => console.error(error));\r\n    }, []);\r\n\r\n    const handlePostCreated = (post) => {\r\n        setPosts([...posts, post]);\r\n    };\r\n\r\n    const handleCommentCreated = (postId, comment) => {\r\n        setPosts(posts.map((post) => {\r\n            if (post.id === postId) {\r\n                return { ...post, comments: [...post.comments, comment] };\r\n            } else {\r\n                return post;\r\n            }\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Post onPostCreated={handlePostCreated} />\r\n            <p>Welcome</p>\r\n            <div>\r\n                {posts.map((post) => (\r\n                    <div key={post.id}>\r\n                        <h2>{post.title}</h2>\r\n                        <p>{post.content}</p>\r\n                        <p>Author: {userLogin}</p>\r\n                        <Comments\r\n                            postId={post.id}\r\n                            comments={post.comments}\r\n                            onCommentCreated={handleCommentCreated}\r\n                        />\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Community;\r\n\r\n// function Community() {\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n\r\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//     userData.forEach((user) => {\r\n//       setUserLogin(user.name);\r\n//     });\r\n\r\n//         axios.get('http://127.0.0.1:8000/api/posts/')\r\n//             .then((response) => setPosts(response.data))\r\n//             .catch((error) => console.error(error));\r\n//     }, []);\r\n\r\n//     const handlePostCreated = (post) => {\r\n//       setPosts([...posts, post]);\r\n//     };\r\n//   return (\r\n//     <>\r\n    \r\n//       {/* <Navbar/> */}\r\n//         <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <Comments></Comments>\r\n//         <p>Welcome</p>\r\n//         <div>\r\n//             <div>hi</div>\r\n//             {posts.map((post) => (\r\n//                 <div key={post.id}>\r\n//                     <h2>{post.title}</h2>\r\n//                     <p>{post.content}</p>\r\n//                     <p>Author: {userLogin}</p>\r\n//                     <hr />\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//       </>\r\n//       {/* <Footer/> */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}