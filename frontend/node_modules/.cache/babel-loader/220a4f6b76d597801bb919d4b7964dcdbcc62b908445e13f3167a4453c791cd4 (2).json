{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [user, setUserLogin] = useState(\"\");\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n    axios.get(\"http://127.0.0.1:8000/api/posts/\").then(response => {\n      // map over the response data and add the name of the author to each post\n      const postsWithAuthorName = response.data.map(post => {\n        var _userData$find;\n        return {\n          ...post,\n          authorName: ((_userData$find = userData.find(user => user.id === post.author)) === null || _userData$find === void 0 ? void 0 : _userData$find.name) || \"Unknown\"\n        };\n      });\n      setPosts(postsWithAuthorName);\n    }).catch(error => console.error(error));\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const newPosts = posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      }\n      return post;\n    });\n    setPosts(newPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        onPostCreated: handlePostCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Author: \", post.authorName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Community, \"6QvAvSejnXsws91feSXW6XjiVZA=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","axios","Post","CommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","posts","setPosts","user","setUserLogin","userData","JSON","parse","localStorage","getItem","get","then","response","postsWithAuthorName","data","map","post","_userData$find","authorName","find","id","author","name","catch","error","console","handlePostCreated","handleCommentCreated","postId","comment","newPosts","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","className","title","content","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport \"./Community.css\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nfunction Community() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [user, setUserLogin] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n  \r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/posts/\")\r\n      .then((response) => {\r\n        // map over the response data and add the name of the author to each post\r\n        const postsWithAuthorName = response.data.map(post => ({\r\n          ...post,\r\n          authorName: userData.find(user => user.id === post.author)?.name || \"Unknown\"\r\n        }));\r\n  \r\n        setPosts(postsWithAuthorName);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n  \r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const newPosts = posts.map((post) => {\r\n      if (post.id === postId) {\r\n        return {\r\n          ...post,\r\n          comments: [...post.comments, comment],\r\n        };\r\n      }\r\n      return post;\r\n    });\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <>\r\n        <Post onPostCreated={handlePostCreated} />\r\n        <div className=\"post_content\">\r\n\r\n          {posts.map((post) => (\r\n            <>\r\n              <div key={post.id}>\r\n                <h3>Author: {post.authorName}</h3>\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n\r\n                <hr />\r\n              </div>\r\n              {/* <div>\r\n             \r\n            </div> */}\r\n            </>\r\n          ))}\r\n        </div>\r\n      </>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}