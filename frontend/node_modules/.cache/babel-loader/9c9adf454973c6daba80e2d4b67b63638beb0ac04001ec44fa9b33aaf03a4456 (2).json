{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [userLogin, setUserLogin] = useState(\"\");\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n    userData.forEach(user => {\n      setUserLogin(user.name);\n    });\n    axios.get('http://127.0.0.1:8000/api/posts/').then(response => setPosts(response.data)).catch(error => console.error(error));\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        post.comments.push(comment);\n      }\n      return post;\n    });\n    setPosts(updatedPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        onPostCreated: handlePostCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", userLogin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Author: \", comment.author]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)]\n            }, comment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n            postId: post.id,\n            onCommentCreated: handleCommentCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(Community, \"3GAgMHhwxW+DTby1aQ42qw4GCKs=\");\n_c = Community;\nfunction CommentForm(_ref) {\n  _s2();\n  let {\n    postId,\n    onCommentCreated\n  } = _ref;\n  const [comment, setComment] = useState(\"\");\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newComment = {\n      content: comment,\n      author: \"Anonymous\" // or set the author based on user authentication\n    };\n\n    axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment).then(response => {\n      onCommentCreated(postId, response.data);\n      setComment(\"\");\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"comment\",\n      children: \"Comment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"comment\",\n      value: comment,\n      onChange: event => setComment(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s2(CommentForm, \"rrFebW9Q28aJJ+M9AxcXUmcj4W0=\");\n_c2 = CommentForm;\nexport default Community;\n\n// function Community() {\n//     const [posts, setPosts] = useState([]);\n//     const [userLogin, setUserLogin] = useState(\"\");\n\n//     useEffect(() => {\n\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//     userData.forEach((user) => {\n//       setUserLogin(user.name);\n//     });\n\n//         axios.get('http://127.0.0.1:8000/api/posts/')\n//             .then((response) => setPosts(response.data))\n//             .catch((error) => console.error(error));\n//     }, []);\n\n//     const handlePostCreated = (post) => {\n//       setPosts([...posts, post]);\n//     };\n//   return (\n//     <>\n\n//       {/* <Navbar/> */}\n//         <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <Comments></Comments>\n//         <p>Welcome</p>\n//         <div>\n//             <div>hi</div>\n//             {posts.map((post) => (\n//                 <div key={post.id}>\n//                     <h2>{post.title}</h2>\n//                     <p>{post.content}</p>\n//                     <p>Author: {userLogin}</p>\n//                     <hr />\n//                 </div>\n//             ))}\n//         </div>\n//       </>\n//       {/* <Footer/> */}\n//     </>\n//   );\n// }\n\n// export default Community;\nvar _c, _c2;\n$RefreshReg$(_c, \"Community\");\n$RefreshReg$(_c2, \"CommentForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","posts","setPosts","userLogin","setUserLogin","userData","JSON","parse","localStorage","getItem","forEach","user","name","get","then","response","data","catch","error","console","handlePostCreated","post","handleCommentCreated","postId","comment","updatedPosts","map","id","comments","push","children","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","title","content","author","CommentForm","onCommentCreated","_c","_ref","_s2","setComment","handleSubmit","event","preventDefault","newComment","onSubmit","htmlFor","type","value","onChange","target","_c2","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Post from \"./Post\";\r\n\r\nfunction Community() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n    userData.forEach((user) => {\r\n      setUserLogin(user.name);\r\n    });\r\n    axios.get('http://127.0.0.1:8000/api/posts/')\r\n      .then((response) => setPosts(response.data))\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const updatedPosts = posts.map(post => {\r\n      if (post.id === postId) {\r\n        post.comments.push(comment);\r\n      }\r\n      return post;\r\n    });\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <Post onPostCreated={handlePostCreated} />\r\n        <p>Welcome</p>\r\n        <div>\r\n          {posts.map((post) => (\r\n            <div key={post.id}>\r\n              <h2>{post.title}</h2>\r\n              <p>{post.content}</p>\r\n              <p>Author: {userLogin}</p>\r\n              <hr />\r\n              <div>\r\n                {post.comments.map(comment => (\r\n                  <div key={comment.id}>\r\n                    <p>{comment.content}</p>\r\n                    <p>Author: {comment.author}</p>\r\n                    <hr />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <CommentForm postId={post.id} onCommentCreated={handleCommentCreated} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction CommentForm({ postId, onCommentCreated }) {\r\n  const [comment, setComment] = useState(\"\");\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newComment = {\r\n      content: comment,\r\n      author: \"Anonymous\", // or set the author based on user authentication\r\n    };\r\n    axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment)\r\n      .then((response) => {\r\n        onCommentCreated(postId, response.data);\r\n        setComment(\"\");\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"comment\">Comment:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"comment\"\r\n        value={comment}\r\n        onChange={(event) => setComment(event.target.value)}\r\n      />\r\n      <button type=\"submit\">Add Comment</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n\r\n// function Community() {\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n\r\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//     userData.forEach((user) => {\r\n//       setUserLogin(user.name);\r\n//     });\r\n\r\n//         axios.get('http://127.0.0.1:8000/api/posts/')\r\n//             .then((response) => setPosts(response.data))\r\n//             .catch((error) => console.error(error));\r\n//     }, []);\r\n\r\n//     const handlePostCreated = (post) => {\r\n//       setPosts([...posts, post]);\r\n//     };\r\n//   return (\r\n//     <>\r\n    \r\n//       {/* <Navbar/> */}\r\n//         <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <Comments></Comments>\r\n//         <p>Welcome</p>\r\n//         <div>\r\n//             <div>hi</div>\r\n//             {posts.map((post) => (\r\n//                 <div key={post.id}>\r\n//                     <h2>{post.title}</h2>\r\n//                     <p>{post.content}</p>\r\n//                     <p>Author: {userLogin}</p>\r\n//                     <hr />\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//       </>\r\n//       {/* <Footer/> */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}