{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\n        const promises = response.data.map(post => axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`));\n        const commentResponses = await Promise.all(promises);\n        const postsWithComments = response.data.map((post, index) => ({\n          ...post,\n          comments: commentResponses[index].data\n        }));\n        setPosts(postsWithComments);\n        console.log(postsWithComments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      } else {\n        return post;\n      }\n    });\n    setPosts(updatedPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        onPostCreated: handlePostCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Author: \", post.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: showCommentForm === post.id && /*#__PURE__*/_jsxDEV(CommentForm, {\n              postId: post.id,\n              onSubmit: comment => handleCommentCreated(post.id, comment)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"com\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setShowCommentForm(post.id),\n                  className: \"com\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-comment-alt comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this), \" Add Comment\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Community, \"9F/XlBce7oKFiq1g4TFzN+30ig0=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","axios","Post","CommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","showCommentForm","setShowCommentForm","posts","setPosts","fetchData","response","get","promises","data","map","post","id","commentResponses","Promise","all","postsWithComments","index","comments","console","log","error","handlePostCreated","handleCommentCreated","postId","comment","updatedPosts","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","className","user","name","title","content","onSubmit","onClick","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport \"./Community.css\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nfunction Community() {\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\r\n            const promises = response.data.map((post) =>\r\n            axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`)\r\n            );\r\n            const commentResponses = await Promise.all(promises);\r\n            const postsWithComments = response.data.map((post, index) => ({\r\n                ...post,\r\n                comments: commentResponses[index].data,\r\n            }));\r\n            setPosts(postsWithComments);\r\n            console.log(postsWithComments)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    fetchData();\r\n}, []);\r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const updatedPosts = posts.map((post) => {\r\n        if (post.id === postId) {\r\n            return {\r\n                ...post,\r\n                comments: [...post.comments, comment],\r\n            };\r\n        } else {\r\n            return post;\r\n        }\r\n    });\r\n    setPosts(updatedPosts);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <>\r\n        <Post onPostCreated={handlePostCreated} />\r\n        <div className=\"post_content\">\r\n\r\n          {posts.map((post) => (\r\n            <>\r\n              <div key={post.id}>\r\n                <h3>Author: {post.user.name}</h3>\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n              </div>\r\n              <div>\r\n             {showCommentForm === post.id && (\r\n                                <CommentForm\r\n                                    postId={post.id}\r\n                                    onSubmit={(comment) =>\r\n                                      handleCommentCreated(post.id, comment)\r\n                                    }\r\n                                />\r\n                            )}\r\n            </div>\r\n            <div>\r\n            <ul className=\"com\">\r\n                  <li>\r\n                    <button\r\n                      onClick={() => setShowCommentForm(post.id)}\r\n                      className=\"com\"\r\n                    >\r\n                      <i className=\"fas fa-comment-alt comment\"></i> Add Comment\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n            </div>\r\n            <hr/>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}