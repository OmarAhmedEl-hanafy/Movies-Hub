{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport CommentForm from \"./CommentForm\";\nimport CreatePost from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\n        const promises = response.data.map(post => axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`));\n        const commentResponses = await Promise.all(promises);\n        const postsWithComments = response.data.map((post, index) => ({\n          ...post,\n          comments: commentResponses[index].data\n        }));\n        setPosts(postsWithComments);\n        console.log(postsWithComments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      } else {\n        return post;\n      }\n    });\n    setPosts(updatedPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"POSTS-BOX\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"POSTS\",\n        children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n          onPostCreated: handlePostCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), posts.map(post => {\n          var _post$comments;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"box-pos\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Title :\", post.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Description :\", post.content]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), (_post$comments = post.comments) === null || _post$comments === void 0 ? void 0 : _post$comments.map((comment, index) => {\n                var _comment$user;\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `Comment-box ${index % 2 === 0 ? \"gray-background\" : \"white-background\"}`,\n                    children: [comment.user && /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: [\" Commenter: \", (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 70,\n                      columnNumber: 38\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: comment.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 21\n                    }, this)]\n                  }, comment.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false);\n              }), showCommentForm === post.id && /*#__PURE__*/_jsxDEV(CommentForm, {\n                postId: post.id,\n                onSubmit: comment => handleCommentCreated(post.id, comment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, comment.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"com\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setShowCommentForm(post.id),\n                    className: \"com\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-comment-alt comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 23\n                    }, this), \" Add Comment\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Community, \"9F/XlBce7oKFiq1g4TFzN+30ig0=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","axios","Post","CommentForm","CreatePost","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","showCommentForm","setShowCommentForm","posts","setPosts","fetchData","response","get","promises","data","map","post","id","commentResponses","Promise","all","postsWithComments","index","comments","console","log","error","handlePostCreated","handleCommentCreated","postId","comment","updatedPosts","children","className","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","_post$comments","title","content","_comment$user","user","name","onSubmit","onClick","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport \"./Community.css\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CreatePost from \"./Post\";\r\n\r\nfunction Community() {\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\r\n            const promises = response.data.map((post) =>\r\n            axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`)\r\n            );\r\n            const commentResponses = await Promise.all(promises);\r\n            const postsWithComments = response.data.map((post, index) => ({\r\n                ...post,\r\n                comments: commentResponses[index].data,\r\n            }));\r\n            setPosts(postsWithComments);\r\n            console.log(postsWithComments)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    fetchData();\r\n}, []);\r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const updatedPosts = posts.map((post) => {\r\n        if (post.id === postId) {\r\n            return {\r\n                ...post,\r\n                comments: [...post.comments, comment],\r\n            };\r\n        } else {\r\n            return post;\r\n        }\r\n    });\r\n    setPosts(updatedPosts);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* {error && <div className=\"error\">{error}</div>} */}\r\n      <section className=\"POSTS-BOX\">\r\n        <div className=\"POSTS\">\r\n          <CreatePost onPostCreated={handlePostCreated} />\r\n          {posts.map((post) => (\r\n            <div key={post.id} className=\"box-pos\">\r\n              <div>\r\n                <h2>Title :{post.title}</h2>\r\n                <p>Description :{post.content}</p>\r\n                {post.comments?.map((comment, index) => (\r\n                  <>\r\n                  <div\r\n                    key={comment.id}\r\n                    className={`Comment-box ${index % 2 === 0 ? \"gray-background\" : \"white-background\"}`}\r\n                  >\r\n                    {comment.user && <h5> Commenter: {comment.user?.name}</h5>}\r\n                    <li>{comment.content}</li>\r\n                  </div>\r\n                  </>\r\n                ))}\r\n                \r\n\r\n                {showCommentForm === post.id && (\r\n                  <CommentForm\r\n                    postId={post.id}\r\n                    onSubmit={(comment) =>\r\n                      handleCommentCreated(post.id, comment)\r\n                    }\r\n                  />\r\n                )}\r\n                {comments.map((comment) => (\r\n                  <div key={comment.id}>\r\n                    <p>{comment.content}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div>\r\n                <ul className=\"com\">\r\n                  <li>\r\n                    <button\r\n                      onClick={() => setShowCommentForm(post.id)}\r\n                      className=\"com\"\r\n                    >\r\n                      <i className=\"fas fa-comment-alt comment\"></i> Add Comment\r\n                    </button>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}