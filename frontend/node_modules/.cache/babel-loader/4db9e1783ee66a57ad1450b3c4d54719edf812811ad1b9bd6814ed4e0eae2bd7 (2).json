{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from 'axios';\n// import Post from \"./Post\";\n\n// function Community() {\n//   const [posts, setPosts] = useState([]);\n//   const [userLogin, setUserLogin] = useState(\"\");\n\n//   useEffect(() => {\n//     const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//     userData.forEach((user) => {\n//       setUserLogin(user.name);\n//     });\n//     axios.get('http://127.0.0.1:8000/api/posts/')\n//       .then((response) => setPosts(response.data))\n//       .catch((error) => console.error(error));\n//   }, []);\n\n//   const handlePostCreated = (post) => {\n//     setPosts([...posts, post]);\n//   };\n\n//   const handleCommentCreated = (postId, comment) => {\n//     const updatedPosts = posts.map(post => {\n//       if (post.id === postId) {\n//         post.comments.push(comment);\n//       }\n//       return post;\n//     });\n//     setPosts(updatedPosts);\n//   };\n\n//   return (\n//     <>\n//       <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <p>Welcome</p>\n//         <div>\n//           {posts.map((post) => (\n//             <div key={post.id}>\n//               <h2>{post.title}</h2>\n//               <p>{post.content}</p>\n//               <p>Author: {userLogin}</p>\n//               <hr />\n//               <div>\n//                 {post.comments.map(comment => (\n//                   <div key={comment.id}>\n//                     <p>{comment.content}</p>\n//                     <p>Author: {comment.author}</p>\n//                     <hr />\n//                   </div>\n//                 ))}\n//               </div>\n//               <CommentForm postId={post.id} onCommentCreated={handleCommentCreated} />\n//             </div>\n//           ))}\n//         </div>\n//       </>\n//     </>\n//   );\n// }\n\n// function CommentForm({ postId, onCommentCreated }) {\n//   const [comment, setComment] = useState(\"\");\n//   const handleSubmit = (event) => {\n//     event.preventDefault();\n//     const newComment = {\n//       content: comment,\n//       author: \"Anonymous\", // or set the author based on user authentication\n//     };\n//     axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment)\n//       .then((response) => {\n//         onCommentCreated(postId, response.data);\n//         setComment(\"\");\n//       })\n//       .catch((error) => console.error(error));\n//   };\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <label htmlFor=\"comment\">Comment:</label>\n//       <input\n//         type=\"text\"\n//         id=\"comment\"\n//         value={comment}\n//         onChange={(event) => setComment(event.target.value)}\n//       />\n//       <button type=\"submit\">Add Comment</button>\n//     </form>\n//   );\n// }\n\n// export default Community;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Post from \"./Post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [userLogin, setUserLogin] = useState(\"\");\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n    userData.forEach(user => {\n      setUserLogin(user.name);\n    });\n    axios.get('http://127.0.0.1:8000/api/posts/').then(response => setPosts(response.data)).catch(error => console.error(error));\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        onPostCreated: handlePostCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Author: \", userLogin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(Community, \"3GAgMHhwxW+DTby1aQ42qw4GCKs=\");\n_c = Community;\nexport default Community;\n\n// function Community() {\n//     const [posts, setPosts] = useState([]);\n//     const [userLogin, setUserLogin] = useState(\"\");\n\n//     useEffect(() => {\n\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\n//     userData.forEach((user) => {\n//       setUserLogin(user.name);\n//     });\n\n//         axios.get('http://127.0.0.1:8000/api/posts/')\n//             .then((response) => setPosts(response.data))\n//             .catch((error) => console.error(error));\n//     }, []);\n\n//     const handlePostCreated = (post) => {\n//       setPosts([...posts, post]);\n//     };\n//   return (\n//     <>\n\n//       {/* <Navbar/> */}\n//         <>\n//         <Post onPostCreated={handlePostCreated} />\n//         <Comments></Comments>\n//         <p>Welcome</p>\n//         <div>\n//             <div>hi</div>\n//             {posts.map((post) => (\n//                 <div key={post.id}>\n//                     <h2>{post.title}</h2>\n//                     <p>{post.content}</p>\n//                     <p>Author: {userLogin}</p>\n//                     <hr />\n//                 </div>\n//             ))}\n//         </div>\n//       </>\n//       {/* <Footer/> */}\n//     </>\n//   );\n// }\n\n// export default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","axios","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","posts","setPosts","userLogin","setUserLogin","userData","JSON","parse","localStorage","getItem","forEach","user","name","get","then","response","data","catch","error","console","handlePostCreated","post","children","onPostCreated","fileName","_jsxFileName","lineNumber","columnNumber","map","title","content","id","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from 'axios';\r\n// import Post from \"./Post\";\r\n\r\n// function Community() {\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//     userData.forEach((user) => {\r\n//       setUserLogin(user.name);\r\n//     });\r\n//     axios.get('http://127.0.0.1:8000/api/posts/')\r\n//       .then((response) => setPosts(response.data))\r\n//       .catch((error) => console.error(error));\r\n//   }, []);\r\n\r\n//   const handlePostCreated = (post) => {\r\n//     setPosts([...posts, post]);\r\n//   };\r\n\r\n//   const handleCommentCreated = (postId, comment) => {\r\n//     const updatedPosts = posts.map(post => {\r\n//       if (post.id === postId) {\r\n//         post.comments.push(comment);\r\n//       }\r\n//       return post;\r\n//     });\r\n//     setPosts(updatedPosts);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <p>Welcome</p>\r\n//         <div>\r\n//           {posts.map((post) => (\r\n//             <div key={post.id}>\r\n//               <h2>{post.title}</h2>\r\n//               <p>{post.content}</p>\r\n//               <p>Author: {userLogin}</p>\r\n//               <hr />\r\n//               <div>\r\n//                 {post.comments.map(comment => (\r\n//                   <div key={comment.id}>\r\n//                     <p>{comment.content}</p>\r\n//                     <p>Author: {comment.author}</p>\r\n//                     <hr />\r\n//                   </div>\r\n//                 ))}\r\n//               </div>\r\n//               <CommentForm postId={post.id} onCommentCreated={handleCommentCreated} />\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// function CommentForm({ postId, onCommentCreated }) {\r\n//   const [comment, setComment] = useState(\"\");\r\n//   const handleSubmit = (event) => {\r\n//     event.preventDefault();\r\n//     const newComment = {\r\n//       content: comment,\r\n//       author: \"Anonymous\", // or set the author based on user authentication\r\n//     };\r\n//     axios.post(`http://127.0.0.1:8000/api/posts/${postId}/comments/`, newComment)\r\n//       .then((response) => {\r\n//         onCommentCreated(postId, response.data);\r\n//         setComment(\"\");\r\n//       })\r\n//       .catch((error) => console.error(error));\r\n//   };\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <label htmlFor=\"comment\">Comment:</label>\r\n//       <input\r\n//         type=\"text\"\r\n//         id=\"comment\"\r\n//         value={comment}\r\n//         onChange={(event) => setComment(event.target.value)}\r\n//       />\r\n//       <button type=\"submit\">Add Comment</button>\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Post from \"./Post\";\r\n\r\nfunction Community() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n        const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n        userData.forEach((user) => {\r\n            setUserLogin(user.name);\r\n        });\r\n\r\n        axios.get('http://127.0.0.1:8000/api/posts/')\r\n            .then((response) => setPosts(response.data))\r\n            .catch((error) => console.error(error));\r\n    }, []);\r\n\r\n    const handlePostCreated = (post) => {\r\n        setPosts([...posts, post]);\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <>\r\n                <Post onPostCreated={handlePostCreated} />\r\n                <p>Welcome</p>\r\n                <div>\r\n                    <div>hi</div>\r\n                    {posts.map((post) => (\r\n                        <div key={post.id}>\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.content}</p>\r\n                            <p>Author: {userLogin}</p>\r\n                            <hr />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Community;\r\n\r\n\r\n// function Community() {\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [userLogin, setUserLogin] = useState(\"\");\r\n\r\n//     useEffect(() => {\r\n\r\n//       const userData = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n//     userData.forEach((user) => {\r\n//       setUserLogin(user.name);\r\n//     });\r\n\r\n//         axios.get('http://127.0.0.1:8000/api/posts/')\r\n//             .then((response) => setPosts(response.data))\r\n//             .catch((error) => console.error(error));\r\n//     }, []);\r\n\r\n//     const handlePostCreated = (post) => {\r\n//       setPosts([...posts, post]);\r\n//     };\r\n//   return (\r\n//     <>\r\n    \r\n//       {/* <Navbar/> */}\r\n//         <>\r\n//         <Post onPostCreated={handlePostCreated} />\r\n//         <Comments></Comments>\r\n//         <p>Welcome</p>\r\n//         <div>\r\n//             <div>hi</div>\r\n//             {posts.map((post) => (\r\n//                 <div key={post.id}>\r\n//                     <h2>{post.title}</h2>\r\n//                     <p>{post.content}</p>\r\n//                     <p>Author: {userLogin}</p>\r\n//                     <hr />\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//       </>\r\n//       {/* <Footer/> */}\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default Community;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}