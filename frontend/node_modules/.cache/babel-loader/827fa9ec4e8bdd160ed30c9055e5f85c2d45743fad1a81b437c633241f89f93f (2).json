{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\n        const promises = response.data.map(post => axios.get(\"http://127.0.0.1:8000/api/posts/{post.id}/comments/\"));\n        const commentResponses = await Promise.all(promises);\n        const postsWithComments = response.data.map((post, index) => ({\n          ...post,\n          comments: commentResponses[index].data\n        }));\n        setPosts(postsWithComments);\n        console.log(postsWithComments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      } else {\n        return post;\n      }\n    });\n    setPosts(updatedPosts);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Post, {\n          onPostCreated: handlePostCreated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_content\",\n          children: posts.map(post => {\n            var _post$comments;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Author: \", post.authorName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 17\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: showCommentForm === post.id && /*#__PURE__*/_jsxDEV(CommentForm, {\n                  postId: post.id,\n                  onSubmit: comment => handleCommentCreated(post.id, comment)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"com\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => setShowCommentForm(post.id),\n                      className: \"com\",\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fas fa-comment-alt comment\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 84,\n                        columnNumber: 45\n                      }, this), \" Add Comment\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 37\n                  }, this), (_post$comments = post.comments) === null || _post$comments === void 0 ? void 0 : _post$comments.map(comment => {\n                    var _comment$user;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [comment.user && /*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: [\" Commenter: \", (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 62\n                      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: comment.content\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 90,\n                        columnNumber: 45\n                      }, this)]\n                    }, comment.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 41\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n}\n_s(Community, \"9F/XlBce7oKFiq1g4TFzN+30ig0=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","axios","Post","CommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","showCommentForm","setShowCommentForm","posts","setPosts","fetchData","response","get","promises","data","map","post","commentResponses","Promise","all","postsWithComments","index","comments","console","log","error","handlePostCreated","handleCommentCreated","postId","comment","updatedPosts","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","className","_post$comments","authorName","title","content","onSubmit","onClick","_comment$user","user","name","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport \"./Community.css\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nfunction Community() {\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\r\n            const promises = response.data.map((post) =>\r\n            axios.get(\"http://127.0.0.1:8000/api/posts/{post.id}/comments/\")\r\n            );\r\n            const commentResponses = await Promise.all(promises);\r\n            const postsWithComments = response.data.map((post, index) => ({\r\n                ...post,\r\n                comments: commentResponses[index].data,\r\n            }));\r\n            setPosts(postsWithComments);\r\n            console.log(postsWithComments)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    fetchData();\r\n}, []);\r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const updatedPosts = posts.map((post) => {\r\n        if (post.id === postId) {\r\n            return {\r\n                ...post,\r\n                comments: [...post.comments, comment],\r\n            };\r\n        } else {\r\n            return post;\r\n        }\r\n    });\r\n    setPosts(updatedPosts);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <>\r\n        <Post onPostCreated={handlePostCreated} />\r\n        <div className=\"post_content\">\r\n\r\n          {posts.map((post) => (\r\n            <>\r\n              <div key={post.id}>\r\n                <h3>Author: {post.authorName}</h3>\r\n                <h2>{post.title}</h2>\r\n                <p>{post.content}</p>\r\n\r\n                <hr />\r\n              </div>\r\n              <div>\r\n             {showCommentForm === post.id && (\r\n                                <CommentForm\r\n                                    postId={post.id}\r\n                                    onSubmit={(comment) =>\r\n                                        handleCommentCreated(post.id, comment)\r\n                                    }\r\n                                />\r\n                            )}\r\n            </div>\r\n            <div>\r\n            <ul className=\"com\">\r\n                                    <li>\r\n                                        <button\r\n                                            onClick={() => setShowCommentForm(post.id)}\r\n                                            className=\"com\"\r\n                                        >\r\n                                            <i className=\"fas fa-comment-alt comment\"></i> Add Comment\r\n                                        </button>\r\n                                    </li>\r\n                                    {post.comments?.map((comment) => (\r\n                                        <div key={comment.id}>\r\n                                            {comment.user && <h5> Commenter: {comment.user?.name}</h5>}\r\n                                            <li>{comment.content}</li>\r\n                                        </div>\r\n                                    ))}\r\n                                </ul>\r\n            </div>\r\n            </>\r\n          ))}\r\n        </div>\r\n      </>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}