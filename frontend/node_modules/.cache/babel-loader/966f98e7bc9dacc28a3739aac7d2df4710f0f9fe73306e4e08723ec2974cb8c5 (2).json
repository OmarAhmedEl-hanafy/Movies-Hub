{"ast":null,"code":"var _jsxFileName = \"E:\\\\\\u2666Collage\\u2666\\\\\\u2666Lv 2\\u2666\\\\Backend Project\\\\Backend Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Footer from \"./Footer\";\nimport axios from \"axios\";\nimport Post from \"./Post\";\nimport \"./Community.css\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Community() {\n  _s();\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\n        const promises = response.data.map(post => axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`));\n        const commentResponses = await Promise.all(promises);\n        const postsWithComments = response.data.map((post, index) => ({\n          ...post,\n          comments: commentResponses[index].data\n        }));\n        setPosts(postsWithComments);\n        console.log(postsWithComments);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handlePostCreated = post => {\n    setPosts([...posts, post]);\n  };\n  const handleCommentCreated = (postId, comment) => {\n    const updatedPosts = posts.map(post => {\n      if (post.id === postId) {\n        return {\n          ...post,\n          comments: [...post.comments, comment]\n        };\n      } else {\n        return post;\n      }\n    });\n    setPosts(updatedPosts);\n    window.location.reload(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        onPostCreated: handlePostCreated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: posts.map(post => {\n          var _post$user, _post$comments;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post_body\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Author: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\" \", (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"create_time\",\n                    children: post.created_at\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Title:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: showCommentForm === post.id && /*#__PURE__*/_jsxDEV(CommentForm, {\n                postId: post.id,\n                onSubmit: comment => handleCommentCreated(post.id, comment)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"com\",\n                children: [/*#__PURE__*/_jsxDEV(\"lo\", {\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setShowCommentForm(post.id),\n                    className: \"com\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fas fa-comment-alt comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this), \" Add Comment\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this), (_post$comments = post.comments) === null || _post$comments === void 0 ? void 0 : _post$comments.map(comment => {\n                  var _comment$user;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [comment.user && /*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: [\"Commenter: \", (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 40\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: comment.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 23\n                    }, this)]\n                  }, comment.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 21\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Community, \"9F/XlBce7oKFiq1g4TFzN+30ig0=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Footer","axios","Post","CommentForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Community","_s","showCommentForm","setShowCommentForm","posts","setPosts","fetchData","response","get","promises","data","map","post","id","commentResponses","Promise","all","postsWithComments","index","comments","console","log","error","handlePostCreated","handleCommentCreated","postId","comment","updatedPosts","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostCreated","className","_post$user","_post$comments","user","name","created_at","title","content","onSubmit","onClick","_comment$user","_c","$RefreshReg$"],"sources":["E:/♦Collage♦/♦Lv 2♦/Backend Project/Backend Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Footer from \"./Footer\";\r\nimport axios from \"axios\";\r\nimport Post from \"./Post\";\r\nimport \"./Community.css\";\r\nimport CommentForm from \"./CommentForm\";\r\n\r\nfunction Community() {\r\n  const [showCommentForm, setShowCommentForm] = useState(false);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/posts/\");\r\n        const promises = response.data.map((post) =>\r\n          axios.get(`http://127.0.0.1:8000/api/posts/${post.id}/comments/`)\r\n        );\r\n        const commentResponses = await Promise.all(promises);\r\n        const postsWithComments = response.data.map((post, index) => ({\r\n          ...post,\r\n          comments: commentResponses[index].data,\r\n        }));\r\n        setPosts(postsWithComments);\r\n        console.log(postsWithComments);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handlePostCreated = (post) => {\r\n    setPosts([...posts, post]);\r\n  };\r\n\r\n  const handleCommentCreated = (postId, comment) => {\r\n    const updatedPosts = posts.map((post) => {\r\n      if (post.id === postId) {\r\n        return {\r\n          ...post,\r\n          comments: [...post.comments, comment],\r\n        };\r\n      } else {\r\n        return post;\r\n      }\r\n    });\r\n    setPosts(updatedPosts);\r\n    window.location.reload(true);\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <>\r\n        <Post onPostCreated={handlePostCreated} />\r\n        <div className=\"post_content\">\r\n          {posts.map((post) => (\r\n            <>\r\n              <div key={post.id}>\r\n                <div className=\"post_body\">\r\n                  <h3>\r\n                    Author: <span> {post.user?.name} </span>\r\n                    <span className=\"create_time\">{post.created_at}</span>\r\n                  </h3>\r\n                  \r\n                </div>\r\n                <div>\r\n                  <h3>Title:</h3>\r\n                  <h2>{post.title}</h2>\r\n                </div>\r\n                <p>{post.content}</p>\r\n              </div>\r\n              <div>\r\n                {showCommentForm === post.id && (\r\n                  <CommentForm\r\n                    postId={post.id}\r\n                    onSubmit={(comment) =>\r\n                      handleCommentCreated(post.id, comment)\r\n                    }\r\n                  />\r\n                )}\r\n              </div>\r\n              <div>\r\n                <ul className=\"com\">\r\n                  <lo>\r\n                    <button\r\n                      onClick={() => setShowCommentForm(post.id)}\r\n                      className=\"com\"\r\n                    >\r\n                      <i className=\"fas fa-comment-alt comment\"></i> Add Comment\r\n                    </button>\r\n                  </lo>\r\n                  {post.comments?.map((comment) => (\r\n                    <div key={comment.id}>\r\n                      {comment.user && <h5>Commenter: {comment.user?.name}</h5>}\r\n                      <li>{comment.content}</li>\r\n                    </div>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n              <hr />\r\n            </>\r\n          ))}\r\n        </div>\r\n      </>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Community;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}